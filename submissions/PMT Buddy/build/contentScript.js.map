{"version":3,"file":"contentScript.js","mappings":"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","sources":["webpack://pmt-buddy/./src/js/background.js","webpack://pmt-buddy/./src/js/utils/Settings.js","webpack://pmt-buddy/./src/js/utils/BrowserStorage.js","webpack://pmt-buddy/webpack/bootstrap","webpack://pmt-buddy/webpack/runtime/define property getters","webpack://pmt-buddy/webpack/runtime/hasOwnProperty shorthand","webpack://pmt-buddy/./src/js/modules/pmt/cleanUpPdfs.js","webpack://pmt-buddy/./src/js/utils/constants.js","webpack://pmt-buddy/./src/js/modules/index.js","webpack://pmt-buddy/./src/js/modules/pmt/hidePmtTutor.js","webpack://pmt-buddy/./src/js/modules/savemyexams/unblockRevisionNotes.js","webpack://pmt-buddy/./src/js/modules/savemyexams/removePremiumPlanBanners.js","webpack://pmt-buddy/./src/js/modules/studocu/studocu_HidePremiumBanners.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport { Settings } from \"./utils/Settings\";\r\n\r\n/**\r\n * Instance with all settings.\r\n */\r\nexport const SettingsInstance = new Settings();\r\n\r\nSettingsInstance\r\n    // Physics and Maths Tutor (PMT)\r\n    .addSetting({\r\n        name: \"Clean up PDFs\",\r\n        id: \"pmt_CleanUpPdfs\",\r\n        category: \"Physics and Maths Tutor\",\r\n        defaultValue: true,\r\n        info:\r\n            \"Redirects PDFs to the original source to remove the white sidebar.\"\r\n    })\r\n    .addSetting({\r\n        name: \"Hide paid tutor content\",\r\n        id: \"pmt_BlockPmtTutor\",\r\n        category: \"Physics and Maths Tutor\",\r\n        defaultValue: false,\r\n        info: \"Hides most paid PMT Education content.\"\r\n    })\r\n    // SaveMyExams (SME)\r\n    .addSetting({\r\n        name: \"Unblock 'Revision Notes'\",\r\n        id: \"sme_unblockRevisionNotes\",\r\n        category: \"SaveMyExams\",\r\n        defaultValue: true,\r\n        info: \"View revision notes without logging in.\"\r\n    })\r\n    .addSetting({\r\n        name: \"Remove premium plan offer banners\",\r\n        id: \"sme_removePremiumPlanBanners\",\r\n        category: \"SaveMyExams\",\r\n        defaultValue: true,\r\n        info:\r\n            \"Removes the premium plan offer banners, including Black Friday sales. (currently broken)\"\r\n    })\r\n    // studocu (STUDOCU)\r\n    .addSetting({\r\n        name: \"Hide 'Premium' banners\",\r\n        id: \"studocu_HidePremiumBanners\",\r\n        category: \"studocu\",\r\n        defaultValue: true,\r\n        info:\r\n            \"Hides annoying banner on premium documents (cannot unblur pages).\"\r\n    })\r\n    .initStorage();\r\n","'use strict';\r\n\r\nimport { BrowserStorage } from \"./BrowserStorage\";\r\n\r\n/**\r\n * A handler for all things settings\r\n */\r\nexport class Settings {\r\n    constructor() {\r\n        this.settings = {};\r\n        this.categories = [];\r\n    }\r\n\r\n    /**\r\n     * Add a checkbox.\r\n     * // TODO: add javadocs\r\n     */\r\n    addSetting({\r\n        name = null,\r\n        id,\r\n        category = \"None\",\r\n        defaultValue = false,\r\n        info = \"\"\r\n    }) {\r\n        // creates the category if it doesn't exist\r\n        if (this.settings[category] === undefined) {\r\n            this.settings[category] = [];\r\n            this.categories.push(category);\r\n        }\r\n\r\n        const setting = {\r\n            name: name ?? id,\r\n            id: id,\r\n            defaultValue: defaultValue,\r\n            info: info\r\n        };\r\n\r\n        this.settings[category].push(setting);\r\n        return this;\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets all settings.\r\n     * Should only be run after all categories and settings are added.\r\n     */\r\n    getSettings() {\r\n        return this.settings\r\n    }\r\n\r\n    getCategories() {\r\n        return this.categories\r\n    }\r\n\r\n    /**\r\n     * Gets the settings HTML.\r\n     * Should only be run after all categories and settings are added.\r\n     * @returns {String} HTML\r\n     */\r\n    getHTML() {\r\n        let html = '';\r\n        this.categories.forEach(categoryName => {\r\n            html += \r\n                    '<details class=\"settings-category\">' +\r\n                    `    <summary>${categoryName}</summary>`\r\n\r\n            this.settings[categoryName].forEach(setting => {\r\n                html +=\r\n                    `    <label class=\"setting\" title=\"${setting.info}\">` +\r\n                    `        ${setting.name}` +\r\n                    `        <input type=\"checkbox\" id=\"${setting.id}\"/>` +\r\n                    '    </label>';\r\n            });\r\n            html += \r\n                    '</details>'\r\n        });\r\n\r\n        if (html === '') {\r\n            html = '<p>No settings available</p>';\r\n        }\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * Sets the setting default values to storage.\r\n     */\r\n    async initStorage() {\r\n        const storage = await BrowserStorage.getAll();\r\n        const settings = this.getSettings();\r\n        this.getCategories().forEach(categoryName => {\r\n            settings[categoryName].forEach(async setting => {\r\n                if (storage[setting.id] === undefined) {\r\n                    await BrowserStorage.set(setting.id, setting.defaultValue);\r\n                }\r\n            });\r\n        });\r\n    };\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * Storage manager.\r\n * TODO: also use firefox's browser namespace\r\n */\r\nexport class BrowserStorage {\r\n    /**\r\n     * get a setting from storage.\r\n     * from https://stackoverflow.com/a/54261558\r\n     * @param {String} key key to get. set to null for all settings\r\n     * @returns {*} setting value, or undefined\r\n     */\r\n    static get = async key =>\r\n        new Promise((resolve, reject) =>\r\n            chrome.storage.local.get(\r\n                key,\r\n                result =>\r\n                    chrome.runtime.lastError\r\n                        ? reject(Error(chrome.runtime.lastError.message))\r\n                        : resolve(result)\r\n            )\r\n        );\r\n\r\n    /**\r\n     * set a setting to storage.\r\n     * TODO: maybe change to this https://stackoverflow.com/a/54261558\r\n     * @param {String} setting setting id\r\n     * @param {*} value new value\r\n     */\r\n    static set = async (id, value) => {\r\n        chrome.storage.local.set({ [id]: value });\r\n    };\r\n\r\n    static async getAll() {\r\n        return await this.get(null);\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\"use strict\";\r\n\r\nexport const pmt_CleanUpPdfs = () => {\r\n    const link = document.getElementsByTagName(\"iframe\")[0]?.src;\r\n\r\n    if (!link) return\r\n    if (!/.*\\.pdf/.test(link)) return\r\n    window.location.href = link;\r\n}","export default {\r\n    contact_email: \"cleaver-exact-chip@duck.com\",\r\n\r\n    image: {\r\n        pmt_sketch: \"https://i.ibb.co/stVfRPL/icon-128.png\"\r\n    }\r\n};\r\n","\"use strict\";\r\nimport { SettingsInstance } from \"../background\";\r\nimport { BrowserStorage } from \"../utils/BrowserStorage\";\r\n\r\nimport { pmt_CleanUpPdfs } from \"./pmt/cleanUpPdfs\";\r\nimport { pmt_HidePmtTutor } from \"./pmt/hidePmtTutor\";\r\n\r\nimport { sme_unblockRevisionNotes } from \"./savemyexams/unblockRevisionNotes\";\r\nimport { sme_removePremiumPlanBanners } from \"./savemyexams/removePremiumPlanBanners\";\r\n\r\nimport { studocu_HidePremiumBanners } from \"./studocu/studocu_HidePremiumBanners\";\r\n\r\n/* \r\nTODO: make a MutationObserver function instead of repeating it everywhere\r\nTODO: https://stackoverflow.com/a/39332340\r\n        \"Avoid using querySelector and especially the extremely slow querySelectorAll.\"\r\n*/\r\n\r\n(async function() {\r\n    const storage = await BrowserStorage.getAll();\r\n\r\n    // if there's still undefined initialise the storage\r\n    if (Object.values(storage).some(s => s === undefined)) {\r\n        await SettingsInstance.initStorage();\r\n    }\r\n\r\n    /** URL of the current page */\r\n    const url = window.location.href;\r\n\r\n    // on load\r\n    addEventListener(\"load\", () => {\r\n        // PMT\r\n        if (url.startsWith(\"https://www.physicsandmathstutor.com/\")) {\r\n            if (storage.pmt_CleanUpPdfs) pmt_CleanUpPdfs();\r\n            if (storage.pmt_BlockPmtTutor) pmt_HidePmtTutor();\r\n        }\r\n        // SaveMyExams\r\n        if (url.startsWith(\"https://www.savemyexams.com/\")) {\r\n            if (storage.sme_unblockRevisionNotes) sme_unblockRevisionNotes();\r\n            if (storage.sme_removePremiumPlanBanners)\r\n                sme_removePremiumPlanBanners();\r\n        }\r\n        // studocu\r\n        if (url.startsWith(\"https://www.studocu.com/\")) {\r\n            if (storage.studocu_HidePremiumBanners)\r\n                studocu_HidePremiumBanners();\r\n        }\r\n    });\r\n\r\n    customUrlChangeEvent();\r\n    window.addEventListener(\"urlchange\", () => {});\r\n})();\r\n\r\nconst customUrlChangeEvent = () => {\r\n    let lastUrl = location.href;\r\n    new MutationObserver(() => {\r\n        const url = location.href;\r\n        if (url !== lastUrl) {\r\n            lastUrl = url;\r\n            //console.log(\"URL changed to\", url);\r\n            // Dispatch custom event\r\n            window.dispatchEvent(new Event(\"urlchange\"));\r\n        }\r\n    }).observe(document, { subtree: true, childList: true });\r\n};\r\n","\"use strict\";\r\n\r\n// TODO: use MutationObserver\r\n\r\nexport const pmt_HidePmtTutor = () => {\r\n    // top banner\r\n    const banners = document.querySelectorAll(\".info-banner\");\r\n    if (banners) banners.forEach(banner => {\r\n        const link = banner.querySelector(\".info-button\")?.href ?? \"\";\r\n        if (/https:\\/\\/www\\.pmt\\.education\\/tutor\\/.*/.test(link))\r\n            banner.remove();\r\n    });\r\n\r\n    // TODO: also hide tutor buttons in the top\r\n\r\n    // tutor profile box(es)\r\n    const tutors = document.querySelectorAll(\".tutor-profile-box\");\r\n    tutors.forEach(el => el.remove());\r\n\r\n    // preparation courses\r\n    const courses = document.querySelectorAll(\".dropshadowboxes-container\");\r\n    courses.forEach(el => {\r\n        const links = el.getElementsByTagName(\"a\");\r\n        if (links)\r\n            Array.from(links).forEach(link => {\r\n                const literalLink = link?.href ?? \"\";\r\n                console.log(literalLink);\r\n                if (/https:\\/\\/www\\.pmt\\.education\\/(courses|tutor)\\/.*/.test(literalLink))\r\n                    el.remove();\r\n                    return;\r\n        });\r\n    })\r\n};","\"use strict\";\r\n\r\nimport constants from \"../../utils/constants\";\r\n\r\nexport const sme_unblockRevisionNotes = () => {\r\n    let found = false;\r\n\r\n    const observer = new MutationObserver((mutations, observer) => {\r\n        if (found) return;\r\n        if (document.querySelector(\".revision-notes_blur__iugNW\")) {\r\n            found = true;\r\n            observer.disconnect();\r\n            unlock();\r\n        }\r\n    });\r\n\r\n    observer.observe(document, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n};\r\n\r\nconst unlock = () => {\r\n    const notice = `\r\n        <div class=\"Card_card__7rJy4 bg-body-secondary rounded-3 p-4 pmt-buddy-notice\">\r\n            <img src=\"${constants.image.pmt_sketch}\" alt=\"pmt-buddy-icon\" width=40 height=40>\r\n            <h4 class=\"h5\">pmtbuddy-title</h4>\r\n            <div>\r\n                <p>pmtbuddy-text</p>\r\n            </div>\r\n        </div>`;\r\n    // used some of their classes to make it look fancy\r\n    // pmt-buddy-notice is a custom class\r\n\r\n    // get blurred part\r\n    const blurred = document.querySelector(\".revision-notes_blur__iugNW\");\r\n\r\n    // get blocked notes\r\n    let notes = document.querySelectorAll(\".Parts_parts__KB319\"); // preferred\r\n    if (notes.length === 0) notes = document.querySelectorAll(\".row.g-4\"); // fallback\r\n    if (notes.length === 0) {\r\n        blurred.insertAdjacentHTML(\r\n            \"beforebegin\",\r\n            notice\r\n                .replace(\"pmtbuddy-title\", \"Failed to unlock\")\r\n                .replace(\"pmtbuddy-text\", \"Try reloading the page\")\r\n        );\r\n        return;\r\n    }\r\n\r\n    blurred.insertAdjacentHTML(\r\n        \"beforebegin\",\r\n        notice\r\n            .replace(\"pmtbuddy-title\", \"Unlocked by PMT Buddy\")\r\n            .replace(\r\n                \"pmtbuddy-text\",\r\n                `<a href=\"mailto:${constants.contact_email}\">Contact me</a> if you run into any issues.`\r\n            )\r\n    );\r\n    let next = blurred;\r\n\r\n    // insert notes\r\n    notes.forEach(note => {\r\n        next.insertAdjacentElement(\"afterend\", note);\r\n        next = note;\r\n    });\r\n\r\n    // delete sign up card\r\n    const signUpCard = document.querySelector(\".SignUpCard_card__0U5gw\");\r\n    signUpCard?.remove();\r\n};\r\n","\"use strict\";\r\n\r\n// currently broken\r\n\r\nexport const sme_removePremiumPlanBanners = () => {\r\n    let found = false;\r\n    const observer = new MutationObserver((mutations, observer) => {\r\n        if (found) return;\r\n        const banner = document.getElementsByClassName(\r\n            \"UpsellBanner_banner__jw3IG\"\r\n        );\r\n        if (banner.length > 0) {\r\n            Array.from(banner).forEach(b => b.remove());\r\n\t\t\tobserver?.disconnect();\r\n            found = true;\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\n\r\nexport const studocu_HidePremiumBanners = () => {\r\n    let found = false;\r\n\r\n    const observer = new MutationObserver((mutations, observer) => {\r\n        if (found) return;\r\n        if (document.querySelector(\"._761ee514a558\")) {\r\n            found = true;\r\n            observer.disconnect();\r\n            deleteBanners();\r\n        }\r\n    });\r\n\r\n    observer.observe(document, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n};\r\n\r\nconst deleteBanners = () => {\r\n    const banners = document.querySelectorAll(\"._761ee514a558\");\r\n    banners.forEach(banner => banner.remove());\r\n};\r\n"],"names":["SettingsInstance","constructor","this","settings","categories","addSetting","name","id","category","defaultValue","info","undefined","push","setting","getSettings","getCategories","getHTML","html","forEach","categoryName","initStorage","storage","BrowserStorage","getAll","async","set","static","Promise","resolve","reject","chrome","local","get","key","result","runtime","lastError","Error","message","value","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","values","some","s","url","window","location","href","addEventListener","startsWith","pmt_CleanUpPdfs","link","document","getElementsByTagName","src","test","pmt_BlockPmtTutor","banners","querySelectorAll","banner","querySelector","remove","el","links","Array","from","literalLink","console","log","pmt_HidePmtTutor","sme_unblockRevisionNotes","found","MutationObserver","mutations","observer","disconnect","notice","constants","blurred","notes","length","insertAdjacentHTML","replace","next","note","insertAdjacentElement","signUpCard","unlock","observe","childList","subtree","sme_removePremiumPlanBanners","getElementsByClassName","b","studocu_HidePremiumBanners","customUrlChangeEvent","lastUrl","dispatchEvent","Event"],"sourceRoot":""}